			
########## START squid.conf ######
acl localnet src 192.168.0.0/16

acl SSL_ports port 443
acl Safe_ports port 80-82 # http
acl Safe_ports port 21 # ftp
acl Safe_ports port 443 # https
acl Safe_ports port 70 # gopher
acl Safe_ports port 210 # wais
acl Safe_ports port 1025-65535 # unregistered ports
acl Safe_ports port 280 # http-mgmt
acl Safe_ports port 488 # gss-http
acl Safe_ports port 591 # filemaker
acl Safe_ports port 777 # multiling http
acl CONNECT method CONNECT

#http_access allow localhost
#доступ к интернету только из списка.
#acl ip-all src 192.168.1.1-192.168.1.254

# списки доступа, фильтровать защищенные соединения мы можем только по имени домена,
# никакие параметры URL учитываться не будут. Для того, чтобы заблокировать домен
# часто используют следующее выражение vk\.com, ^([A-Za-z0-9.-]*\.)?vk\.com:

# Зададим черный список для http:
#acl httpssoclist dstdom_regex -i "/etc/squid/acls/httpssoc.acl"
#acl blocked_sites_http dstdomain "/etc/squid/acls/stopWWW"

# Зададим черный список для SSL https:
#acl httpssoclists ssl::server_name_regex -i "/etc/squid/acls/httpssoc.acl"
acl blocked_sites ssl::server_name "/etc/squid/acls/stopWWW"

# укажем DNS-сервер, который следует использовать squid,
# он должен обязательно совпадать с DNS-сервером, используемым клиентами
dns_nameservers  192.168.1.1

# этот блок является стандартным, просто контролируем его наличие,
# встроенный кеш-менеджер squid - manager:
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localhost
# блокируем сайты вручную
#http_access deny httpssoclist httpssoclists
http_access deny blocked_sites
#http_access deny blocked_sites_http
# всем кто в списке разрешить
#http_access allow ip-all
#http_access allow localhost

# остальным  запретить
#http_access deny all
# переходим на страницу блокировки
#deny_info http://www.examle.ru/zapret_loc.html blocked_sites
#shutdown_lifetime 5 seconds
# прозрачный порт указывается опцией intercept
http_port 192.168.1.108:3128 intercept

# также нужно указать непрозрачный порт, ибо если захотите вручную указать адрес
# прокси в браузере, указав прозрачный порт, вы получите ошибку доступа, поэтому нужно
# указывать непрозрачный порт в браузере, если конечно такое желание будет.
http_port 192.168.1.108:8081
# и наконец, указываем HTTPS порт с нужными опциями
https_port 192.168.1.108:3129 intercept ssl-bump options=ALL:NO_SSLv3:NO_SSLv2 dynamic_cert_mem_cache_size=20MB cert=/etc/squid/sslcert/squid.pem key=/etc/squid/sslcert/squid.key
#generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/sslcert/squid.pem key=/etc/squid/sslcert/squid.key
#https_port 192.168.8.2:3129 intercept ssl-bump connection-auth=off cert=/etc/squid/squidCA.pem
# Первая опция указывает направлять весь трафик сразу в интернет, без использования вышестоящих кешей,
# а вторая разрешают соединение даже с ошибками проверки сертификата
always_direct allow all
sslproxy_cert_error allow all
# Следующий элемент указывает на глубину перехвата HTTPS-трафика,
# нам нужен только домен, поэтому ограничимся минимальным вмешательством:
acl step1 at_step SslBump1
# Действие peek "заглядывает" в соединение на указанную нами глубину,
# terminate блокирует соединения по совпадению условий (черный список + офисный диапазон адресов)
# и наконец splice разрешает все остальные соединения, не вмешиваясь в них.
ssl_bump peek step1
#ssl_bump terminate blocked_sites httpssoclist httpssoclists
ssl_bump splice all
# Не использовать IPv6, если доступен IPv4-адрес
#dns_v4_first on
# создание сертификата по подмене
sslcrtd_program /usr/lib/squid/security_file_certgen  -s /var/lib/squid/ssl_db -M 20MB
#sslcrtd_program /usr/lib/squid/security_file_certgen  -c -s /var/spool/squid/ssl_db -M 10
coredump_dir /var/spool/squid
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320

visible_hostname = "ae-proxy.gp.ae"

#отвечает за хранение закешированных объектов в оперативке
cache_mem 1068 MB
cache_dir ufs /var/spool/squid 1024 16 256

#(процесс удаления старых объектов заканчивается, если достигнут данный уровень)
cache_swap_low 90
#(при достижении данного уровня заполнения кеша - в процентах - начинается ускоренный процесс удаления старых объектов;
# для большого кеша эти границы надо поднять, 5% от 8 GB - это 400 MB!)
cache_swap_high 95

#maximum_object_size_in_memory 512 KB

#устанавливают ограничения на размер передаваемых объектов
#maximum_object_size 4096 KB
#minimum_object_size 25 KB

#освободить не используемую память
memory_pools off

memory_replacement_policy lru
#кол-во ротаций логов  Squid
logfile_rotate 14

########## END squid.conf ###########
